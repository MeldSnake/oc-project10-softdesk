# Generated by Django 4.1.7 on 2023-02-28 19:23

from django.conf import settings
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion


def replace_none_choices(apps, schema_editor):
    Contributor = apps.get_model('sd_projects', 'Contributor')
    for row in Contributor.objects.filter(permission=0):
        row.delete()
    for row in Contributor.objects.filter(role=0):
        row.role = 2
        row.save(update_fields=['role'])


def replace_priority(apps, schema_editor):
    Issue = apps.get_model('sd_projects', 'Issue')
    for row in Issue.objects.filter(priority__gt=2):
        row.priority = 2
        row.save(update_fields=['priority'])


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sd_projects', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            code=replace_none_choices,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AddField(
            model_name='issue',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_issues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='contributor',
            name='permission',
            field=models.PositiveSmallIntegerField(choices=[(1, 'read'), (2, 'write'), (3, 'delete')]),
        ),
        migrations.AlterField(
            model_name='contributor',
            name='role',
            field=models.PositiveSmallIntegerField(choices=[(1, 'owner'), (2, 'contributor')]),
        ),
        migrations.AlterField(
            model_name='issue',
            name='priority',
            field=models.PositiveSmallIntegerField(choices=[(0, 'low'), (1, 'average'), (2, 'high')]),
        ),
        migrations.AddConstraint(
            model_name='contributor',
            constraint=models.UniqueConstraint(models.F('user'), models.F('project'), name='unique_user_project'),
        ),
    ]
